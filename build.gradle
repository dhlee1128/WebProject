plugins {
    id 'com.bmuschko.cargo' version '2.8.0'
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'war'
}

group = 'com.become.atum'
version = '0.0.1-SNAPSHOT'
description = 'ATUM WebPortal'
sourceCompatibility = '1.8'

/* tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
} */

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

bootWar.enabled = false
war.enabled = true

//운영환경 설정파일 분리
ext.profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile
sourceSets {
    main {
        resources {
            srcDirs "src/main/resources", "src/main/resources-${profile}"
        }
    }
}

def warFileName = "WebPortal##${new Date().format('yyyyMMddHHmmss')}"
war {
    //운영 배포시 common-util의 포트 번호 변경
    //운영시 1개 tomcat에 2개의 어플리케이션이 배포되므로 MESCoreEngine 포트를 WebPortal과 동일하게 설정
    filteringCharset = 'UTF-8'
    eachFile { files ->
        if (files.path == 'resources/js/common/common-util.js') {
            filter { line ->
                line.replace('(Number(window.location.port) + 1)', 'window.location.port')
            }
        }
    }

    archiveName = "${warFileName}.war"
}

repositories {
    mavenLocal()
    maven { url "https://repo1.maven.org/maven2"}
    //mavenCentral()
    //maven { url "http://www.datanucleus.org/downloads/maven2/"}
    //maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.10.3'
    implementation 'org.apache.commons:commons-lang3:3.10'
    implementation'javax.servlet:jstl:1.2'
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    implementation 'org.apache.poi:poi:4.1.2'
    implementation 'org.apache.poi:poi-ooxml:4.1.2'
    implementation 'org.apache.poi:poi-ooxml-schemas:4.1.2'
    implementation 'org.apache.poi:poi-scratchpad:4.1.2'
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
    compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version:'1.9.12'
    compile group: 'org.codehaus.jackson', name: 'jackson-jaxrs', version:'1.5.7'
    compile group: 'net.sf.jxls', name: 'jxls-core', version: '1.0.6'
    compile group: 'org.jxls', name: 'jxls', version: '2.10.0'
    compile group: 'org.jxls', name: 'jxls-poi', version: '2.10.0'
    compile group: 'org.jxls', name: 'jxls-jexcel', version: '1.0.7'
    compile group: 'org.jsoup', name: 'jsoup', version: '1.10.3'
    compile group: 'commons-fileupload', name: 'commons-fileupload', version:'1.2.2'
    compile group: 'commons-io', name: 'commons-io', version:'1.3.2'
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    compile group: 'org.json', name: 'json', version: '20190722'
    compile group: 'org.jsoup', name: 'jsoup', version: '1.10.3'
    compile group: 'com.itextpdf', name: 'itextpdf', version: '5.5.13'

    implementation group: 'com.oracle.database.security', name: 'osdt_core', version: '19.3.0.0'
    implementation group: 'com.oracle.ojdbc', name: 'osdt_cert', version: '19.3.0.0'

    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.7.3' // mariadb
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // runtimeOnly 'com.oracle.database.jdbc:ojdbc6:11.2.0.4'
    runtimeOnly 'org.springframework.boot:spring-boot-starter-tomcat'
    compile  'com.googlecode.json-simple:json-simple:1.1.1'
    // providedCompile 'javax.servlet:javax.servlet-api:2.5'
    // providedCompile 'javax.servlet.jsp:jsp-api:2.1'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'

    def cargoVersion = '1.8.3'
    cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
            "org.codehaus.cargo:cargo-licensed-dtds:$cargoVersion",
            "org.codehaus.cargo:cargo-ant:$cargoVersion"
}

// test {
//     useJUnitPlatform()
// }

cargo {
    containerId = 'tomcat9x'
    port = 8888 //server tomcat port number

    deployable {
        file = file("build/libs/${warFileName}.war")
        context = "${warFileName}"
    }

    remote {
        hostname = "192.168.0.28"//server address
        username = "tomcat" //from tomcat-users.xml
        password = "become1!"
    }
}
